<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RubyMotion | ]]></title>
  <link href="http://fooqri.github.io/blog/categories/rubymotion/atom.xml" rel="self"/>
  <link href="http://fooqri.github.io/"/>
  <updated>2014-10-17T09:09:55-07:00</updated>
  <id>http://fooqri.github.io/</id>
  <author>
    <name><![CDATA[Patrick Goddi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CoreData.SQLDebug for RubyMotion]]></title>
    <link href="http://fooqri.github.io/blog/2013/06/01/coredata-dot-sqldebug-for-rubymotion/"/>
    <updated>2013-06-01T12:23:00-07:00</updated>
    <id>http://fooqri.github.io/blog/2013/06/01/coredata-dot-sqldebug-for-rubymotion</id>
    <content type="html"><![CDATA[<p>It is sometimes handy to turn on CoreData.SQLDebug in the simulator when debugging a Core Data issue. I have found the output to be very useful in finding the hard to find little bugs that pop-up between restkit and core data. It can also help find performance issues with the database.  Unfortunately there isn&rsquo;t any documentation for how to do this in RubyMotion. I found one solution that works to a degree. It requires installing the ios_sim app and forcing the simulator into CoreData.SQLDebug mode after the rubymotion build.</p>

<p>You will need to install ios_sim</p>

<pre><code>$ brew install ios-sim
</code></pre>

<p>Then add the following two line as the last lines in your RubyMotion rakefile</p>

<pre><code># Be sure to substitute your app name and make sure you are using
# the correct path to the app based on simulator version.
ios_sim = `which ios-sim`.strip
sh "#{ios_sim} launch build/iPhoneSimulator-6.1-Development/appname.app --args -com.apple.CoreData.SQLDebug 1"
</code></pre>

<p>This will open the simulator in CoreData.SQLDebug mode, and log debug information to the terminal.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting RKLogConfigureByName working in RubyMotion]]></title>
    <link href="http://fooqri.github.io/blog/2013/03/07/getting-rklogconfigurebyname-working-in-rubymotion/"/>
    <updated>2013-03-07T15:21:00-08:00</updated>
    <id>http://fooqri.github.io/blog/2013/03/07/getting-rklogconfigurebyname-working-in-rubymotion</id>
    <content type="html"><![CDATA[<p>Just a quick note, I was getting an undefined constant error for
RKLogConfigureByName, the standard way of setting up logging in
RestKit. It seems that the #define statements in the
<em>/vendor/Pods/RestKit/Code/Support/RKLog.h</em> file are not getting
picked up. I am using the pod and loading with RubyMotion pod support,
so IÃ¥m not sure what the issue is. I will need to investigate further
but this quick workaround works, just call the lower-level method
mapped via the #define. For example instead of RKLogConfigureByName
use RKlcl_configure_by_name.  I also list all the RKlcl_v constants to
use instead of the RKLogLevel constants. I also included an example of
how they are used, in this case I have put the setup in a method, and
it gets called from the the standard didFinishLaunchingWithOption
application block.</p>

<p><div><script src='https://gist.github.com/4733618.js'></script>
<noscript><pre><code></code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
