<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Org Mode on </title>
    <link>http://rwx.io/tags/org-mode/</link>
    <description>Recent content in Org Mode on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>patrick@rwx.io (Patrick Goddi)</managingEditor>
    <webMaster>patrick@rwx.io (Patrick Goddi)</webMaster>
    <copyright>Â© 2018 rwx.io</copyright>
    <lastBuildDate>Sun, 14 Oct 2018 15:52:54 -0700</lastBuildDate>
    
	<atom:link href="http://rwx.io/tags/org-mode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>macOS URI Protocol Handler</title>
      <link>http://rwx.io/posts/osx-uri-protocol-handler/</link>
      <pubDate>Sun, 14 Oct 2018 15:52:54 -0700</pubDate>
      <author>patrick@rwx.io (Patrick Goddi)</author>
      <guid>http://rwx.io/posts/osx-uri-protocol-handler/</guid>
      <description>&lt;p&gt;Strangely over the past week I ran into the need for a URI protocol handler on three different occasions. Instead of looking for three separate existing handlers that might work, I decided to write a single generic handler.  The solution is a simple URI protocol router that forwards requests to shell scripts that handle the protocol requests. Below I describe some of the details; you can also find the end result on github: &lt;a href=&#34;https://github.com/fooqri/uri-handler&#34; title=&#34;uri-handler&#34;&gt;uri-handler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fun with Literate CoffeeScript</title>
      <link>http://rwx.io/posts/fun-with-literate-coffeescript/</link>
      <pubDate>Wed, 15 Oct 2014 08:16:53 -0700</pubDate>
      <author>patrick@rwx.io (Patrick Goddi)</author>
      <guid>http://rwx.io/posts/fun-with-literate-coffeescript/</guid>
      <description>I have always been fascinated with the potential of literate programming; combining inline code in my notes. I have many org-mode documents that interactively execute code for various tasks and procedures. These tasks includes certain maintenance activities, or destructive operations I don&#39;t want to get wrong. I have an entire org document devoted to db maintenance, filled with Ruby code to execute complicated db queries and operations. It is nice to see the example code inline in my notes, and be able to modify the code and execute it directly in my notes.</description>
    </item>
    
  </channel>
</rss>