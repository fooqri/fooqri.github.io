<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Org on </title>
    <link>http://rwx.io/tags/org/</link>
    <description>Recent content in Org on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>patrick@rwx.io (Patrick Goddi)</managingEditor>
    <webMaster>patrick@rwx.io (Patrick Goddi)</webMaster>
    <copyright>Â© 2018 rwx.io</copyright>
    <lastBuildDate>Fri, 11 Mar 2016 15:51:20 -0700</lastBuildDate>
    
	<atom:link href="http://rwx.io/tags/org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Org Export Configurations</title>
      <link>http://rwx.io/posts/org-export-configurations/</link>
      <pubDate>Fri, 11 Mar 2016 15:51:20 -0700</pubDate>
      <author>patrick@rwx.io (Patrick Goddi)</author>
      <guid>http://rwx.io/posts/org-export-configurations/</guid>
      <description>Emacs org mode offers a variety of export options that make it easy to look at your notes in different formats, or perhaps make them available for others to view. Three I use regularly are markdown, mindmap, and reveal presentation.
My approach to Note Taking The best way to learn something is to sumarize the topic in your own words, in your own context, and present it to others with concrete examples.</description>
    </item>
    
    <item>
      <title>Org Mode ES2015&#43; Code Blocks</title>
      <link>http://rwx.io/posts/org-mode-es2015plus-code-blocks/</link>
      <pubDate>Tue, 06 Oct 2015 16:57:01 -0700</pubDate>
      <author>patrick@rwx.io (Patrick Goddi)</author>
      <guid>http://rwx.io/posts/org-mode-es2015plus-code-blocks/</guid>
      <description>Update: I have updated instructions for installing and using the recently released Babel 6 with org mode.
I use emacs org mode to keep notes including code nodes that support inline execution. It is convenient for keeping useful code snippets, as well as experimenting while taking notes. Because of features like Org + Deft it is really easy to find the sweet spot between keeping coding notes organized but also easily searched.</description>
    </item>
    
    <item>
      <title>Fun with Literate CoffeeScript</title>
      <link>http://rwx.io/posts/fun-with-literate-coffeescript/</link>
      <pubDate>Wed, 15 Oct 2014 08:16:53 -0700</pubDate>
      <author>patrick@rwx.io (Patrick Goddi)</author>
      <guid>http://rwx.io/posts/fun-with-literate-coffeescript/</guid>
      <description>I have always been fascinated with the potential of literate programming; combining inline code in my notes. I have many org-mode documents that interactively execute code for various tasks and procedures. These tasks includes certain maintenance activities, or destructive operations I don&#39;t want to get wrong. I have an entire org document devoted to db maintenance, filled with Ruby code to execute complicated db queries and operations. It is nice to see the example code inline in my notes, and be able to modify the code and execute it directly in my notes.</description>
    </item>
    
  </channel>
</rss>