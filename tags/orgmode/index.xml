<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Orgmode on </title>
    <link>http://rwx.io/tags/orgmode/</link>
    <description>Recent content in Orgmode on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>patrick@rwx.io (Patrick Goddi)</managingEditor>
    <webMaster>patrick@rwx.io (Patrick Goddi)</webMaster>
    <copyright>Â© 2018 rwx.io</copyright>
    <lastBuildDate>Fri, 19 Oct 2018 13:39:09 -0700</lastBuildDate>
    
	<atom:link href="http://rwx.io/tags/orgmode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Org-Brain: Concept Mapping in Org</title>
      <link>http://rwx.io/posts/org-brain/</link>
      <pubDate>Fri, 19 Oct 2018 13:39:09 -0700</pubDate>
      <author>patrick@rwx.io (Patrick Goddi)</author>
      <guid>http://rwx.io/posts/org-brain/</guid>
      <description>&lt;p&gt;My notes directory contains hundreds of &lt;em&gt;Org&lt;/em&gt; files that can be quickly retrieved via search using either &lt;a href=&#34;http://rwx.io/posts/deft-and-orgmode-for-notes/&#34; title=&#34;Deft&#34;&gt;Deft&lt;/a&gt; or &lt;a href=&#34;https://github.com/syohex/emacs-helm-ag&#34; title=&#34;The Silver Searcher&#34;&gt;The Silver Searcher&lt;/a&gt;. The challenge however is getting a sense of the bigger picture over time, and reminding myself of old projects that might be useful to review. I have found that &lt;a href=&#34;https://github.com/Kungsgeten/org-brain&#34; title=&#34;Org-Brain&#34;&gt;Org-Brain&lt;/a&gt; is a great compliment to &lt;em&gt;Deft&lt;/em&gt;. &lt;em&gt;Org-brain&lt;/em&gt; is an &lt;em&gt;Emacs&lt;/em&gt; package that integrates with &lt;em&gt;org-mode&lt;/em&gt; to provide concept-mapping for your notes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rwx.io/images/org-brain1.png&#34; alt=&#34;/images/org-brain1.png&#34; title=&#34;/images/org-brain1.png&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deft &#43; Org for Notes</title>
      <link>http://rwx.io/posts/deft-and-orgmode-for-notes/</link>
      <pubDate>Thu, 10 Mar 2016 15:44:58 -0700</pubDate>
      <author>patrick@rwx.io (Patrick Goddi)</author>
      <guid>http://rwx.io/posts/deft-and-orgmode-for-notes/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;http://rwx.io/posts/nvalt-and-emacs&#34; title=&#34;nvALT and Emacs post&#34;&gt;nvALT and Emacs post&lt;/a&gt; I described an integration between &lt;em&gt;nvAlt&lt;/em&gt; and &lt;em&gt;Emacs&lt;/em&gt; using &lt;a href=&#34;http://jblevins.org/projects/deft/&#34; title=&#34;Deft&#34;&gt;Deft&lt;/a&gt; for &lt;em&gt;markdown&lt;/em&gt; notes. I the past year I have moved to using &lt;em&gt;Deft&lt;/em&gt; for &lt;em&gt;org&lt;/em&gt; notes rather than &lt;em&gt;markdown&lt;/em&gt; notes. The nice thing about combining Deft with Org is that your notes are indexed and easy to find using Deft, but also retain all of the power of Org to orgainize and present information. For example typing &lt;em&gt;decision boundary&lt;/em&gt; into &lt;strong&gt;deft&lt;/strong&gt; quickly cuts down hundreds of org text notes to the handful that contain the words &lt;strong&gt;decision&lt;/strong&gt; and &lt;strong&gt;boundary&lt;/strong&gt; in them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://rwx.io/images/deft-v0.6.gif&#34; alt=&#34;/images/deft-v0.6.gif&#34; title=&#34;/images/deft-v0.6.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Org Mode ES2015&#43; Code Blocks (updated)</title>
      <link>http://rwx.io/posts/org-with-babel-node-updated/</link>
      <pubDate>Wed, 09 Mar 2016 16:57:39 -0700</pubDate>
      <author>patrick@rwx.io (Patrick Goddi)</author>
      <guid>http://rwx.io/posts/org-with-babel-node-updated/</guid>
      <description>&lt;p&gt;Babel 6x is a significant change from Babel 5x, as the &lt;em&gt;cli&lt;/em&gt; is now a separate node module called &lt;em&gt;babel-cli&lt;/em&gt; and transforms are now also delivered as separate packages. First make a few changes to the emacs environment so you can use JavaScript in &lt;strong&gt;org mode&lt;/strong&gt;, as well as find local &lt;em&gt;node.js&lt;/em&gt; modules you have installed. Replace &lt;code&gt;~/org/node_modules&lt;/code&gt; in the configuration below with the location of any local node modules you want to use. Using this approach you don&#39;t have to pollute the global node_module directory if you don&#39;t want to.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#+begin_src js :cmd &amp;quot;org-babel-node&amp;quot; :results output drawer
  let arr = [1, 2]; 
  let [x, y] = arr;

   console.log(x);
   console.log(y);
#+end_src

:RESULTS:
1
2
:END:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>